name: Build
permissions: {}

on:
  pull_request:
  repository_dispatch:
    types: [build-command]

jobs:
  build:
    name: Build Job
    runs-on: ubuntu-latest
    # This job only runs if the short SHA from the command matches the start of the PR's head SHA.
    if: |
      github.event_name == 'repository_dispatch' &&
      github.event.client_payload.slash_command.args.named.sha != '' &&
      startsWith(
        github.event.client_payload.pull_request.head.sha, 
        github.event.client_payload.slash_command.args.named.sha
      )
    steps:
      - name: Simulate build process
        run: echo "Building the project..."

      - uses: actions/github-script@v6
        id: update-check-run
        if: ${{ always() }}
        env:
          number: ${{ github.event.client_payload.pull_request.number }}
          job: ${{ github.job }}
          # Conveniently, job.status maps to https://developer.github.com/v3/checks/runs/#update-a-check-run
          conclusion: ${{ job.status }} 
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pull } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: process.env.number
            });
            const ref = pull.head.sha;

            const { data: checks } = await github.rest.checks.listForRef({
              ...context.repo,
              ref
            });

            const check = checks.check_runs.filter(c => c.name === process.env.job);

            const { data: result } = await github.rest.checks.update({
              ...context.repo,
              check_run_id: check[0].id,
              status: 'completed',
              conclusion: process.env.conclusion
            });

            return result;